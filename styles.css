/* General styles */
html, body {
    margin: 0;
    height: 100%;
    overflow: hidden; /* Disable scrolling on the entire page */
    display: flex;
    background-color: lightgray;
}

/* Left-side panel */
.side-panel {
    width: 210px;
    background-color: #f0f0f0;
    height: 100vh; /* Full viewport height */
    box-sizing: border-box;
    /* border-right: 2px solid #ccc; */
    font-size: 10px;
    overflow-y: auto; /* Enable scrolling within the side panel */
}
.slider-container{
    background-color: #d3d3d3;
    margin-bottom: 5px;  /* Adds 20px of vertical space between sliders */
}
.decrease-btn, .increase-btn {
    width: 15px;
    height: 15px; /* Smaller size for the buttons */
    padding: 0;
    font-size: 10px; /* Smaller text inside the button */
    margin-bottom: 2px; /* Space between the up and down buttons */
}
.checkbox-group label {
    display: block;
}

.checkbox-group { 
    padding-bottom: 10px;

}

.checkbox-row {
    display: flex;
    flex-direction: row;
    align-items: center;
}

.checkbox-row label {
    margin-right: 3px; /* Space between checkboxes in a row */
}
/* Container for the camera feeds and their duplicates, arranged side-by-side */
.camera-row {
    display: flex;
    flex-grow: 1; /* Allows cameras to take up the remaining space */
    box-sizing: border-box;
    padding-left : 10px ;

}

/* Individual camera and its duplicate stacked vertically */
.camera-container {
    display: flex;
    flex-direction: column; /* Stack original and duplicate vertically */
    align-items: center;
}

/* Container for the duplicate camera feed and its canvas */
.duplicate-container {
    position: relative;
    display: flex;
    justify-content: center;
    align-items: center;
    margin-top: 10px; /* Add space between original feed and duplicate */
}

/* Style for live camera feeds */
img {
    width: auto;
    height: 40vh; /* Set height to be less than half of the window */
}

/* Style for canvas overlays on duplicate feeds */
canvas {
    position: absolute; /* Overlay canvas on top of the corresponding video feed */
    top: 0;
    left: 0;
    width: auto;
    height: 40vh; /* Match the height of the video feed */
    pointer-events: none; /* Ensure canvas doesn't block interactions with the image */
}

/* Fixed white canvas in the top-right corner */
#whiteCanvas {
    position: relative;
    width: 280px;
    height: 100px;
    background-color: white; /* Make the canvas background white */
    z-index: 1000; /* Ensure it's on top of other elements */
}

#whiteCanvasContainer {
    top: 0;
    right: 0;
    position: fixed;
}
#pixelatedCanvas {
    position: relative;
    width: 280px;
    height: 100px;
    background-color: white; /* Make the canvas background white */
    z-index: 1000; /* Ensure it's on top of other elements */
}

#pixelatedCanvasContainer {
    top: 0;
    right: 0;
    position: fixed;
    top: 120px; 

}
.mirrored {
    transform: scaleX(-1);
    -webkit-transform: scaleX(-1); /* For Safari */
}
